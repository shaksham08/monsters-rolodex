{"version":3,"sources":["Components/Card/Card.js","Components/card-list/CardList.js","Components/seachBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeHolder","handleChange","searchTerm","value","type","placeholder","onChange","App","state","bind","fetch","then","res","json","setState","e","this","target","filteredList","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGe,SAASA,EAAKC,GAC3B,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,KAEN,mCAAML,EAAMG,QAAQG,QACpB,4BAAIN,EAAMG,QAAQI,WCPT,SAASC,EAASR,GAC/B,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,cAACJ,EAAD,CAAuBI,QAASA,GAArBA,EAAQC,S,MCLZ,SAASO,EAAUX,GAAQ,IAChCY,EAA0CZ,EAA1CY,YAAaC,EAA6Bb,EAA7Ba,aAAcC,EAAed,EAAfc,WACnC,OACE,uBACEb,UAAU,SACVc,MAAOD,EACPE,KAAK,OACLC,YAAaL,EACbM,SAAUL,I,ICiCDM,E,kDAtCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXX,SAAU,GACVK,WAAY,IAEd,EAAKD,aAAe,EAAKA,aAAaQ,KAAlB,gBANR,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GAAD,OAAS,EAAKE,SAAS,CAAEjB,SAAUe,S,0BAG7C,SAAaG,GACXC,KAAKF,SAAS,CAAEZ,WAAYa,EAAEE,OAAOd,U,oBAGvC,WAAU,IAAD,EAC0Ba,KAAKR,MAA9BX,EADD,EACCA,SAAUK,EADX,EACWA,WACZgB,EAAerB,EAASsB,QAAO,SAAC5B,GAAD,OACnCA,EAAQG,KAAK0B,cAAcC,SAASnB,EAAWkB,kBAEjD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAACU,EAAD,CACEE,aAAce,KAAKf,aACnBC,WAAYc,KAAKR,MAAMN,WACvBF,YAAY,oBAEd,cAACJ,EAAD,CAAUC,SAAUqB,W,GAjCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d93cb31a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.styles.css\";\r\n\r\nexport default function Card(props) {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        alt=\"\"\r\n      />\r\n      <h2> {props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./CardList.styles.css\";\r\nimport Card from \"../Card/Card\";\r\n\r\nexport default function CardList(props) {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./SearchBox.styles.css\";\r\n\r\nexport default function SearchBox(props) {\r\n  const { placeHolder, handleChange, searchTerm } = props;\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      value={searchTerm}\r\n      type=\"text\"\r\n      placeholder={placeHolder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./Components/card-list/CardList\";\nimport SearchBox from \"./Components/seachBox/SearchBox\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchTerm: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((res) => this.setState({ monsters: res }));\n  }\n\n  handleChange(e) {\n    this.setState({ searchTerm: e.target.value });\n  }\n\n  render() {\n    const { monsters, searchTerm } = this.state;\n    const filteredList = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          handleChange={this.handleChange}\n          searchTerm={this.state.searchTerm}\n          placeHolder=\"Search Monsters\"\n        />\n        <CardList monsters={filteredList} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}